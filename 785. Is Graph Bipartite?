class Solution {
public:
 
  void dfs(vector<vector<int>>& graph, vector<int>& vis,int i,vector<int>& col,int temp)
  {
     vis[i]=1;
     if(temp==1)
     {
       col[i]=2;
       temp=2;
     }
     else
     {
          col[i]=1;
          temp=1;
     }
  
     for(int j=0;j<graph[i].size();j++)
     {
        if(vis[graph[i][j]]==0)
        {
            dfs(graph,vis,graph[i][j],col,temp);
        }
     }
  }
    
    bool isBipartite(vector<vector<int>>& graph) {
        if(graph.size()==0)
        return false;

        int r=graph.size();
        int c=graph[0].size();
        vector<int> vis(r,0);
        vector<int> col(r,0);
        for(int i=0;i<graph.size();i++)
        {
                if(vis[i]==0)
                {
                    dfs(graph,vis,i,col,1);
                }
        }

        for(int i=0;i<graph.size();i++)
        {
            for(int j=0;j<graph[i].size();j++)
            {
                if(col[graph[i][j]]==col[i])
                return false;
            }
        }
        return true;
    }
};
