class Solution {
public:

    bool check(string temp)
    {
        for(int i = 0; i < temp.size(); i++)
        {
            if(temp[i] != ' ')
                continue;
            else
            {
                if(i + 1 < temp.size() && temp[i + 1] >= '0' && temp[i + 1] <= '9')
                    return true;
                return false;
            }
        }
        return false;
    }

    vector<string> reorderLogFiles(vector<string>& logs) {
        if(logs.size() == 0)
            return {};

        vector<int> pos;
        queue<string> q;
        for(int i = 0; i < logs.size(); i++)
        {
            if(check(logs[i]))
            {
                q.push(logs[i]);
                pos.push_back(i);
            }
        }

        for(int i = pos.size() - 1; i >= 0; i--)
        {
            logs.erase(logs.begin() + pos[i]);
        }

        sort(logs.begin(), logs.end(), [](const string& a, const string& b)
        {
            int posa = a.find(' ');
            int posb = b.find(' ');

            string subA = a.substr(posa + 1);
            string subB = b.substr(posb + 1);

            if (subA == subB)
            {
                return a.substr(0, posa) < b.substr(0, posb);
            }
            else
            {
                return subA < subB;
            }
        });

        while(!q.empty())
        {
            logs.push_back(q.front());
            q.pop();
        }

        return logs;
    }
};
