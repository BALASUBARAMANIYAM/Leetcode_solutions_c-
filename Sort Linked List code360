#include<bits/stdc++.h>

Node* findMid(Node* head) {
    Node* slow = head;
    Node* fast = head->next;

    while (fast != nullptr && fast->next != nullptr) {
        slow = slow->next;
        fast = fast->next->next;
    }

    return slow;
}

Node* mergeTwoLists(Node* left, Node* right) {
    if (!left) return right;
    if (!right) return left;

    Node* result;
    if (left->data < right->data) {
        result = left;
        result->next = mergeTwoLists(left->next, right);
    } else {
        result = right;
        result->next = mergeTwoLists(left, right->next);
    }
    return result;
}

Node* mergeSort(Node* head) {
    if (!head || !head->next) return head;

    Node* mid = findMid(head);
    Node* rightHead = mid->next;
    mid->next = nullptr;

    Node* left = mergeSort(head);
    Node* right = mergeSort(rightHead);

    return mergeTwoLists(left, right);
}

Node* sortLL(Node* head) {
    return mergeSort(head);
}
